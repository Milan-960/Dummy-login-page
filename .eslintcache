[{"C:\\htdocs\\REACT\\Dummy app\\src\\index.js":"1","C:\\htdocs\\REACT\\Dummy app\\src\\App.js":"2","C:\\htdocs\\REACT\\Dummy app\\src\\components\\Home\\Home.js":"3","C:\\htdocs\\REACT\\Dummy app\\src\\components\\Login\\Login.js":"4","C:\\htdocs\\REACT\\Dummy app\\src\\components\\MainHeader\\MainHeader.js":"5","C:\\htdocs\\REACT\\Dummy app\\src\\components\\MainHeader\\Navigation.js":"6","C:\\htdocs\\REACT\\Dummy app\\src\\components\\UI\\Card\\Card.js":"7","C:\\htdocs\\REACT\\Dummy app\\src\\components\\UI\\Button\\Button.js":"8","C:\\htdocs\\REACT\\Dummy app\\src\\Store\\AuthContext.js":"9"},{"size":285,"mtime":1627385932897,"results":"10","hashOfConfig":"11"},{"size":505,"mtime":1627386910664,"results":"12","hashOfConfig":"11"},{"size":468,"mtime":1627386168657,"results":"13","hashOfConfig":"11"},{"size":3867,"mtime":1627386895333,"results":"14","hashOfConfig":"11"},{"size":308,"mtime":1627383215621,"results":"15","hashOfConfig":"11"},{"size":954,"mtime":1627383553946,"results":"16","hashOfConfig":"11"},{"size":218,"mtime":1627369346161,"results":"17","hashOfConfig":"11"},{"size":353,"mtime":1616593928000,"results":"18","hashOfConfig":"11"},{"size":981,"mtime":1627387503087,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cl14ud",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\htdocs\\REACT\\Dummy app\\src\\index.js",[],"C:\\htdocs\\REACT\\Dummy app\\src\\App.js",[],"C:\\htdocs\\REACT\\Dummy app\\src\\components\\Home\\Home.js",[],["40","41"],"C:\\htdocs\\REACT\\Dummy app\\src\\components\\Login\\Login.js",["42","43"],"import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../Store/AuthContext\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    console.log(\"Loda It is running\");\n\n    return () => {\n      console.log(\"CLEANUP !\");\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 300);\n\n    return () => {\n      console.log(\"CLEANUP!!\");\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.IsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","C:\\htdocs\\REACT\\Dummy app\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\htdocs\\REACT\\Dummy app\\src\\components\\MainHeader\\Navigation.js",[],"C:\\htdocs\\REACT\\Dummy app\\src\\components\\UI\\Card\\Card.js",[],"C:\\htdocs\\REACT\\Dummy app\\src\\components\\UI\\Button\\Button.js",[],"C:\\htdocs\\REACT\\Dummy app\\src\\Store\\AuthContext.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":59,"column":11,"nodeType":"50","messageId":"51","endLine":59,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":67,"column":6,"nodeType":"54","endLine":67,"endColumn":37,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'identifier' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.isValid' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]",{"range":"61","text":"62"},[1958,1989],"[emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]"]